generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
  OWNER
}

model Organization {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
  name      String
  projects  Project[]
}

model Project {
  id             String       @id @default(cuid())
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @default(now()) @updatedAt
  name           String
  organizationId String
  organization   Organization @relation(fields: [organizationId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  apiKeys        ApiKey[]
  functions      Function[]
}

model ApiKey {
  id              String    @id @default(cuid())
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @default(now()) @updatedAt
  lastUsedAt      DateTime?
  expiresAt       DateTime?
  description     String?
  publicKey       String    @unique
  hashedSecretKey String    @unique
  projectId       String
  project         Project   @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@index(publicKey)
}

model Function {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
  name        String   @unique
  code        String
  entryPoint  String?
  description String?
  language    String?  @default("javascript")
  runtime     String?  @default("nodejs")
  version     String?  @default("1.0.0")
  timeout     Int?     @default(30000)
  memoryLimit Int?     @default(256)
  metadata    Json?    @default("{}")
  envVars     Json?    @default("{}")
  projectId   String
  project     Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@index(name)
}
